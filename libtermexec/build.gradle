apply plugin: 'com.android.library'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
    }

    defaultConfig {
        externalNativeBuild {
            ndkBuild {
                arguments '-C', 'src/main', '-j', Runtime.runtime.availableProcessors() + ''
                if (abiArm) abiFilters 'arm64-v8a', 'armeabi-v7a'
                if (abiX86) abiFilters 'x86_64', 'x86'
            }
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    packagingOptions {
        jniLibs.useLegacyPackaging = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    splits {
        abi {
            enable abiSplits
            reset()
            if (abiArm) include 'arm64-v8a', 'armeabi-v7a'
            if (abiX86) include 'x86_64', 'x86'
            universalApk buildUniversalApk
        }
    }

    compileOptions {
        sourceCompatibility = versions.sourceCompatibility
        targetCompatibility = versions.targetCompatibility
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

dependencies {
    implementation "androidx.annotation:annotation:${versions.annotation}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
}
